# Copyright (c) 2010 - 2013, AllSeen Alliance. All rights reserved.
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# 

import os
Import('daemon_env', 'daemon_objs')

# Add OS specific daemon_objs
if daemon_env['ICE'] == 'on':
    os_objs = daemon_env.Object(['ProximityScanner.cc', 'Socket.cc'])
else:
    os_objs = []

proximity_objs = daemon_env.SConscript('proximity/SConscript', exports = ['daemon_env'])
winmdswitch = '\"/WINMDFILE:%s\"' % os.path.abspath('AllJoyn.winmd')
daemon_env.Append(LINKFLAGS=['/MANIFEST:NO', '/SUBSYSTEM:CONSOLE', '/TLBID:1', '/APPCONTAINER', '/WINMD', winmdswitch])

if daemon_env['CPU'] == 'arm':
    daemon_env.Append(LINKFLAGS=['/INCREMENTAL:NO'])

# Build the resources for the dll
rsc = daemon_env.RES('DaemonResources.rc')

# Build the Windows daemon.
alljoyn_libs = daemon_env.SharedLibrary('AllJoyn', daemon_objs + proximity_objs + os_objs)
daemon_env.Install('$WINRT_DISTDIR/bin', 'AllJoyn.winmd') #put the *.winmd file in the bin folder

progs = [alljoyn_libs] # alljoyn.dll will be returned
Return('progs', 'os_objs')
