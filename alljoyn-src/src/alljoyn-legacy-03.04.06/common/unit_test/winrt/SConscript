# Copyright (c) 2010 - 2011, AllSeen Alliance. All rights reserved.
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# 

import os
from os.path import basename
Import('env')

env.Append(CPPPATH=['../../../../../../../../inc'])
env.Append(CPPPATH=['inc'])
env.Append(CPPDEFINES=['COMMON_WINRT_PUBLIC', '_WINRT_DLL'])
   
# manually add dependencies for xml to h, and for files included in the xml
env.Depends('inc/Status.h', '../../../../../../../../src/Status.xml')

env.Status('../../../../../../../../src/Status')

winmdswitch = '\"/WINMDFILE:%s\"' % os.path.abspath('qcc.winrt.winmd')
env.Append(LINKFLAGS=['/MANIFEST:NO', '/SUBSYSTEM:CONSOLE', '/TLBID:1', '/APPCONTAINER', '/WINMD', winmdswitch])

# Platform specific sources
excluded_src = ['ScatterGatherList.cc', 'Status_CPP0x.cc']
winrt_srcs = [ f for f in env.Glob('../../../../../../../../os/winrt/*.cc') ]
common_srcs = [ f for f in env.Glob('../../../../../../../../src/*.cc') ]
crypto_srcs =  [ f for f in env.Glob('../../../../../../../../crypto/winrt/*.cc') ]
common_srcs = [ f for f in common_srcs if basename(str(f)) not in excluded_src ]

winrt_objs = env.Object(winrt_srcs);
common_objs = env.Object(common_srcs);
crypto_objs = env.Object(crypto_srcs);

# Build the Windows daemon.
qcc_winrt_dll = env.SharedLibrary('qcc.winrt.dll', winrt_objs + common_objs + crypto_objs)


